{"version":3,"sources":["components/Card.js","components/CardList.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","monsters","map","Search","placeholder","handleChange","onChange","type","App","props","e","setState","search","target","value","state","axios","get","then","response","data","catch","err","console","log","message","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gWAaeA,MAVf,YAA0B,IAAXC,EAAU,EAAVA,QACX,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAQG,GAAlC,0BAA8DC,IAAI,YAC1E,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,Y,MCMTC,MAVf,YAA+B,IAAZC,EAAW,EAAXA,SACf,OACI,qBAAKP,UAAU,WAAf,SACKO,EAASC,KAAI,SAACT,GAAD,OACV,cAAC,EAAD,CAAwBA,QAASA,GAArBA,EAAQG,U,MCQrBO,MAbf,YAAgD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAC3B,OACI,8BACI,uBACAX,UAAU,SACVU,YAAaA,EACbE,SAAUD,EACVE,KAAK,cCqCFC,EAzCf,kDACE,WAAeC,GAAQ,IAAD,8BACpB,cAAMA,IAoBRJ,aAAe,SAACK,GACd,EAAKC,SAAS,CAACC,OAAQF,EAAEG,OAAOC,SAnBhC,EAAKC,MAAQ,CACXd,SAAU,GACVW,OAAQ,IALU,EADxB,qDASE,WAAqB,IAAD,OAOlBI,IAAMC,IAAI,8CACRC,MAAK,SAAAC,GACL,EAAKR,SAAS,CAACV,SAAUkB,EAASC,UAEnCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAIG,cApBlC,oBAyBE,WAAU,IAAD,EAEsBC,KAAKX,MAA1Bd,EAFD,EAECA,SAAUW,EAFX,EAEWA,OACZe,EAAmB1B,EAAS2B,QAAO,SAAAnC,GAAO,OAC9CA,EAAQK,KAAK+B,cAAcC,SAASlB,EAAOiB,kBAE7C,OACE,sBAAKnC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAQU,YAAa,iBAAkBC,aAAcqB,KAAKrB,eAC1D,cAAC,EAAD,CAAUJ,SAAU0B,WAnC5B,GAAyBI,aCMVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a0684c81.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Card.css'\r\n\r\nfunction Card({monster}) {\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={`https://robohash.org/${monster.id}?set=set2&size=180x180`} alt=\"monster\"/>\r\n            <h2>{monster.name}</h2>\r\n            <b>{monster.email}</b>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport Card from './Card'\r\nimport './CardList.css'\r\n\r\nfunction CardList({monsters}) {\r\n    return (\r\n        <div className=\"cardList\">\r\n            {monsters.map((monster) => (\r\n                <Card  key={monster.id} monster={monster}/>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList\r\n","import React from 'react'\r\nimport './Search.css'\r\n\r\nfunction Search({ placeholder, handleChange }) {\r\n    return (\r\n        <div>\r\n            <input\r\n            className=\"search\"\r\n            placeholder={placeholder}\r\n            onChange={handleChange}\r\n            type=\"search\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, { Component } from 'react'\nimport './App.css';\nimport axios from 'axios'\nimport CardList from './components/CardList';\nimport Search from './components/Search';\n\nexport class App extends Component {\n  constructor   (props) {\n    super(props)\n  \n    this.state = {\n      monsters: [],\n      search: ''\n    }\n  }\n  componentDidMount() {\n    // fetch(\"https://jsonplaceholder.typicode.com/users\")\n    // .then(response => response.json())\n    // .then(data => {\n    //   this.setState({monsters: data})\n    // })\n    // .catch(err => console.log(err.message))\n    axios.get(\"https://jsonplaceholder.typicode.com/users\")\n     .then(response => {\n      this.setState({monsters: response.data})\n    })\n    .catch(err => console.log(err.message))\n  }\n  handleChange = (e) => {\n    this.setState({search: e.target.value})\n  }\n  render() {\n    \n    const { monsters, search } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(search.toLowerCase())\n      )\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <Search placeholder={'seach monsters'} handleChange={this.handleChange}/>\n        <CardList monsters={filteredMonsters}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}